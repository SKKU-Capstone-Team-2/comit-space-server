{
	"info": {
		"_postman_id": "24abc26e-e256-4c36-89c5-373352a2b44a",
		"name": "Client",
		"description": "ROLE_ADMIN의 권한이 아니어도 접근 가능한 API입니다.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "37781323",
		"_collection_link": "https://comit-space.postman.co/workspace/Team-Workspace~e0ffc23b-a101-46dd-895f-8d18674fd562/collection/43603232-24abc26e-e256-4c36-89c5-373352a2b44a?action=share&source=collection_link&creator=37781323"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Log In",
					"item": [
						{
							"name": "[200] Succeed",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var access = pm.response.headers.get('access');",
											"pm.globals.set(\"accessToken\", access);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"admin01@gmail.com\",\n    \"password\": \"admin01\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/login",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"login"
									]
								},
								"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
							},
							"response": []
						},
						{
							"name": "[401] Authentication Failed",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"admin@gmail.com\",\r\n    \"password\": \"incorrect_password\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/login",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"login"
									]
								}
							},
							"response": []
						}
					],
					"description": "#### User가 로그인하면 Access Token과 Refresh Token을 발급합니다.\n\n- Access Token\n    \n    - `access` 헤더에 저장됩니다\n        \n    - 30분 뒤 만료됩니다\n        \n- Refresh Token\n    \n    - Cookie에 저장됩니다\n        \n    - 24시간 뒤 만료됩니다\n        \n- 이메일이 존재하지 않으면 401\n    \n- 비밀번호가 틀리면 401"
				},
				{
					"name": "Logout",
					"item": [
						{
							"name": "[200] Succeed",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful PUT request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Add your name in the body\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/logout",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"logout"
									]
								},
								"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
							},
							"response": []
						}
					],
					"description": "#### User가 로그아웃하면 Refresh Token을 삭제합니다\n\n- 토큰이 없으면 400\n    \n- 만료된 토큰이면 401\n    \n- 리프레시 토큰이 아니면 400\n    \n- 토큰이 DB에 없으면 404"
				},
				{
					"name": "Reissue",
					"item": [
						{
							"name": "[200] Succeed",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{base_url}}/reissue",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"reissue"
									]
								},
								"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
							},
							"response": []
						}
					],
					"description": "#### Refresh Token을 이용해 Access Token을 재발급합니다.\n\n- 토큰이 없으면 400\n    \n- 만료된 토큰이면 401\n    \n- 유효하지 않은 토큰이면 401\n    \n- 토큰이 DB에 없으면 404"
				},
				{
					"name": "Join",
					"item": [
						{
							"name": "[200] Admin Succeed",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful DELETE request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"username\": \"admin01\",\r\n  \"password\": \"admin01\",\r\n  \"phoneNumber\": \"01000000001\",\r\n  \"studentId\": \"2025000001\",\r\n  \"email\": \"admin01@gmail.com\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/join",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"join"
									]
								},
								"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
							},
							"response": []
						},
						{
							"name": "[200] Succeed",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful DELETE request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"username\": \"comit01\",\r\n  \"password\": \"comit01\",\r\n  \"phoneNumber\": \"01000000001\",\r\n  \"studentId\": \"2026000001\",\r\n  \"email\": \"comit01@gmail.com\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/join",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"join"
									]
								},
								"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
							},
							"response": []
						},
						{
							"name": "[409] Duplicate Resource",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"username\": \"admin01\",\r\n  \"password\": \"admin01\",\r\n  \"phoneNumber\": \"01000000000\",\r\n  \"studentId\": \"2000000000\",\r\n  \"email\": \"admin01@gmail.com\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/join",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"join"
									]
								}
							},
							"response": []
						},
						{
							"name": "[400] Invalid Email",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"username\": \"admin\",\r\n  \"password\": \"adminadmin\",\r\n  \"phoneNumber\": \"01099999999\",\r\n  \"studentId\": \"2099999999\",\r\n  \"email\": \"admingmail.com\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/join",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"join"
									]
								}
							},
							"response": []
						},
						{
							"name": "[400] Invalid Phone Number",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"username\": \"admin\",\r\n  \"password\": \"adminadmin\",\r\n  \"phoneNumber\": \"sdfsdfsdf\",\r\n  \"studentId\": \"2099999999\",\r\n  \"email\": \"comit99@gmail.com\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/join",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"join"
									]
								}
							},
							"response": []
						},
						{
							"name": "[400] Invalid Student ID",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"username\": \"admin\",\r\n  \"password\": \"adminadmin\",\r\n  \"phoneNumber\": \"01099999999\",\r\n  \"studentId\": \"2020312\",\r\n  \"email\": \"comit99@gmail.com\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/join",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"join"
									]
								}
							},
							"response": []
						},
						{
							"name": "[400] Bad Password",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"username\": \"admin\",\r\n  \"password\": \"pwd\",\r\n  \"phoneNumber\": \"01099999999\",\r\n  \"studentId\": \"2020312938\",\r\n  \"email\": \"comit99@gmail.com\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/join",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"join"
									]
								}
							},
							"response": []
						}
					],
					"description": "#### 이름, 비밀번호, 전화번호, 학번, 이메일을 바탕으로 신규 User를 생성합니다.\n\n- 중복된 전화번호, 학번, 이메일인 경우 409\n    \n- 이메일, 전화번호, 학번 형식이 잘못 되면 400\n    \n- 비밀번호가 6자 미만이면 400"
				}
			],
			"description": "회원가입, 로그인, 로그아웃, 토큰 재발급 등 Auth와 관련된 API입니다."
		},
		{
			"name": "Study",
			"item": [
				{
					"name": "Show all Studies",
					"item": [
						{
							"name": "[200] Succeed",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8080/api/studies",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"studies"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Show a Study",
					"item": [
						{
							"name": "[200] Succeed",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/studies/1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"studies",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "[404] Not Found",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/studies/99",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"studies",
										"99"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Delete a Study",
					"item": [
						{
							"name": "[200] Succeed",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/studies/1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"studies",
										"1"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Create a Study",
					"item": [
						{
							"name": "[201] Created",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"스프링1\",\n    \"imageSrc\": \"abcd\",\n    \"day\": \"월\",\n    \"startTime\": \"09:00\",\n    \"endTime\": \"16:00\",\n    \"level\": \"중급\",\n    \"tags\": [\"java\", \"spring\", \"jpa\"],\n    \"campus\": \"율전\",\n    \"description\": \"아오 힘들어\",\n    \"isRecruiting\": true,\n    \"semester\": \"Fall\",\n    \"year\": 2025\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/studies",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"studies"
									]
								}
							},
							"response": []
						},
						{
							"name": "[401] Anauthorized",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"스프링2\",\n    \"imageSrc\": \"abcd\",\n    \"day\": \"월\",\n    \"startTime\": \"09:00\",\n    \"endTime\": \"16:00\",\n    \"level\": \"중급\",\n    \"stacks\": [\"java\", \"spring\", \"jpa\"],\n    \"campus\": \"율전\",\n    \"description\": \"아오 힘들어\",\n    \"isRecruiting\": true,\n    \"semester\": \"Fall_24\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/studies",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"studies"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Update a Study",
					"item": [
						{
							"name": "[200] Succeed",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "id",
										"value": "1",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": \"수정 테스트\",\r\n    \"imageSrc\": \"abcd\",\r\n    \"day\": \"월\",\r\n    \"startTime\": \"09:00\",\r\n    \"endTime\": \"16:00\",\r\n    \"level\": \"중급\",\r\n    \"stacks\": [\"java\", \"spring\", \"jpa\"],\r\n    \"campus\": \"율전\",\r\n    \"description\": \"아오 힘들어\",\r\n    \"isRecruiting\": true,\r\n    \"semester\": \"Fall_24\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/studies/42",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"studies",
										"42"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "[401] Unauthorized",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"스프링1\",\n    \"imageSrc\": \"abbcd\",\n    \"mentor\": \"김주민\",\n    \"day\": \"토\",\n    \"startTime\": \"09:00\",\n    \"endTime\": \"16:00\",\n    \"level\": \"중급\",\n    \"stack\": [\"java\", \"spring\", \"jpa\"],\n    \"campus\": \"율전\",\n    \"description\": \"아오 졸라 힘들어\",\n    \"isRecruiting\": true,\n    \"semester\": \"Fall_24\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/studies/13",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"studies",
										"13"
									]
								}
							},
							"response": []
						},
						{
							"name": "[403] Forbidden",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"스프링3\",\n    \"imageSrc\": \"abbcd\",\n    \"mentor\": \"김주민\",\n    \"day\": \"토\",\n    \"startTime\": \"09:00\",\n    \"endTime\": \"16:00\",\n    \"level\": \"중급\",\n    \"stack\": [\"java\", \"spring\", \"jpa\"],\n    \"campus\": \"율전\",\n    \"description\": \"아오 졸라 힘들어\",\n    \"isRecruiting\": true,\n    \"semester\": \"Fall_24\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/studies/13",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"studies",
										"13"
									]
								}
							},
							"response": []
						},
						{
							"name": "[404] Not Found",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"스프링1\",\n    \"imageSrc\": \"abbcd\",\n    \"mentor\": \"김주민\",\n    \"day\": \"토\",\n    \"startTime\": \"09:00\",\n    \"endTime\": \"16:00\",\n    \"level\": \"중급\",\n    \"stack\": [\"java\", \"spring\", \"jpa\"],\n    \"campus\": \"율전\",\n    \"description\": \"아오 졸라 힘들어\",\n    \"isRecruiting\": true,\n    \"semester\": \"Fall_24\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/studies/99",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"studies",
										"99"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "Get Staff Profile",
					"item": [
						{
							"name": "[200] isStaff",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/staffs",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"staffs"
									]
								}
							},
							"response": []
						}
					],
					"description": "사용자가 isStaff 파라미터에 따라 모든 직원 프로필 또는 자신의 프로필을 조회합니다.\n\n- Endpoint: GET `/api/users`\n    \n- Request Headers\n    \n    - Authorization (optional): Bearer {사용자 토큰}\n        \n- Query Parameters\n    \n    - isStaff (optional): true/false\n        \n        • true: 모든 직원 프로필을 반환합니다.  \n        • false: 직원이 아닌 프로필을 반환합니다.  \n        • null 또는 미지정: 현재 사용자의 프로필을 반환합니다.\n        \n- Response\n    \n    - **200 OK**: 성공\n        \n    - **401 Unauthorized Error**: 인증 실패 (로그인x, 만료) notionvc: 1b6832e7-f01e-46ad-9f94-07dd44fec76b\n        \n    - **500 Internal Server Error**: 서버 오류 notionvc: ff22427b-1b0c-427b-958d-418765dea9d7"
				},
				{
					"name": "Get User Profile",
					"item": [
						{
							"name": "[200] User",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/profile",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"profile"
									]
								}
							},
							"response": []
						},
						{
							"name": "[401] Unauthorized",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/profile",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"profile"
									]
								}
							},
							"response": []
						}
					],
					"description": "사용자가 자신의 프로필 정보를 조회합니다(로그인 필요 + 자기 프로필만)\n\n- Endpoint: GET `/api/users/profile`\n    \n- Request Headers\n    \n    - Authorization: Bearer {사용자 토큰}\n        \n- Response\n    \n    - **200 OK**: 성공\n        \n    - **401 Unauthorized**: 인증 실패 notionvc: dcdec08e-7358-43d4-8e62-ee3ea7ac3465\n        \n    - **500 Internal Server Error**: 서버 오류"
				},
				{
					"name": "Update Profile",
					"item": [
						{
							"name": "Succeed",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"bio\": \"Updated bio\",\n    \"github\": \"https://github.com/updated\",\n    \"blog\": \"https://blog/updated.com\",\n    \"profileImage\": \"https://example.com/images/updated.jpg\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/profile",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"profile"
									]
								}
							},
							"response": []
						},
						{
							"name": "[401] Unauthorized",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"bio\": \"Updated bio\",\n    \"github\": \"https://github.com/updated\",\n    \"blog\": \"https://blog/updated.com\",\n    \"profileImage\": \"https://example.com/images/updated.jpg\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/profile",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"profile"
									]
								}
							},
							"response": []
						},
						{
							"name": "[400] Invalid Field",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"1234\",\n    \"phoneNumber\": \"1234567890\",\n    \"bio\": \"Updated bio\",\n    \"github\": \"https://github.com/updated\",\n    \"blog\": \"https://blog/updated.com\",\n    \"profileImage\": \"https://example.com/images/updated.jpg\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/profile",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"profile"
									]
								}
							},
							"response": []
						},
						{
							"name": "[409] Duplicate Resource Copy",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"phoneNumber\": \"01071078525\",\n    \"bio\": \"Updated bio\",\n    \"github\": \"https://github.com/updated\",\n    \"blog\": \"https://blog/updated.com\",\n    \"profileImage\": \"https://example.com/images/updated.jpg\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/profile",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"profile"
									]
								}
							},
							"response": []
						}
					],
					"description": "사용자가 정해진 필드내에서 자신의 프로필을 업데이트합니다\n\n{  \n\"phoneNumber\": \"010-9876-5432\",  \n\"studentId\": \"2023001234\",  \n\"email\": \"[john.updated@example.com](https://mailto:john.updated@example.com)\",  \n\"bio\": \"Updated bio about John Doe.\",  \n\"github\": \"[https://github.com/johndoe-updated\"](https://github.com/johndoe-updated),  \n\"blog\": \"[https://johndoeblog-updated.com\"](https://johndoeblog-updated.com),  \n\"profileImage\": \"[https://example.com/images/john-updated.jpg\"](https://example.com/images/john-updated.jpg)  \n}\n\n유효하지 않은 값으로 변경 시도 400\n\n고유한 필드에서 중복 발생 409\n\n사용자가 정해진 필드내에서 자신의 프로필을 업데이트합니다\n\n- Endpoint: PATCH `/api/users/profile`\n    \n- Request Headers\n    \n    - Authorization: Bearer {사용자 토큰}\n        \n- Response\n    \n    - **200 OK**: 업데이트 성공\n        \n    - **400 Bad Request**: 유효하지 않은 입력\n        \n    - **401 Unauthorized**: 인증 실패\n        \n    - **409 Conflict**: 리소스 충돌(중복)\n        \n    - **500 Internal Server Error**: 서버 오류"
				},
				{
					"name": "Delete Account",
					"item": [
						{
							"name": "[200] Succeed",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}/profile",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"profile"
									]
								}
							},
							"response": []
						}
					],
					"description": "사용자가 자신의 계정을 삭제합니다\n\n- Endpoint: DELETE `/api/users/profile`\n    \n- Request Headers\n    \n    - Authorization: 세션\n        \n- Response\n    \n    - **200 OK:** 삭제 성공\n        \n    - **401 Unauthorized**: 인증 실패\n        \n    - **500 Internal Server Error**: 서버 오류"
				},
				{
					"name": "Get Created Study",
					"item": [
						{
							"name": "[200] Succeed",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/profile/studies-created",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"profile",
										"studies-created"
									]
								}
							},
							"response": []
						},
						{
							"name": "[401] Unauthorized",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/profile/studies-created",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"profile",
										"studies-created"
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"description": "User 프로필 조회, 업데이트, 삭제 API입니다"
		},
		{
			"name": "Post",
			"item": [
				{
					"name": "Show all Posts",
					"item": [
						{
							"name": "[200] Succeed",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/posts",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"posts"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Show a Post",
					"item": [
						{
							"name": "[200] Succeed",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/posts/1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"posts",
										"1"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Create a Post",
					"item": [
						{
							"name": "[201] Create Post",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"Spring Boot 스터디 1주차 정리\",\n  \"content\": \"오늘은 환경 세팅 공부했습니다.\",\n  \"imageSrc\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/posts/STUDY/1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"posts",
										"STUDY",
										"1"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Update a Post",
					"item": [
						{
							"name": "[200] Succeed",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"Spring Boot 스터디 1주차 정리\",\n  \"content\": \"오늘은 환경 세팅 공부했습니다.\",\n  \"imageSrc\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/posts/STUDY/1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"posts",
										"STUDY",
										"1"
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"description": "모든 post 는 group에 종속,\n\n즉 group에 속한 사람만 post 생성 가능"
		},
		{
			"name": "Comment",
			"item": [
				{
					"name": "Create a Comment",
					"item": [
						{
							"name": "[201] Create Comment",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"Spring Boot 스터디 1주차 정리\",\n  \"content\": \"오늘은 환경 세팅 공부했습니다.\",\n  \"imageSrc\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/posts/STUDY/1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"posts",
										"STUDY",
										"1"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Deleta a Comment",
					"item": [
						{
							"name": "[200] Succeed",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"Spring Boot 스터디 1주차 정리\",\n  \"content\": \"오늘은 환경 세팅 공부했습니다.\",\n  \"imageSrc\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/comments/1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"comments",
										"1"
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"description": "Comment는 Post를 조회할 때 같이 조회됩니다"
		},
		{
			"name": "Reservation",
			"item": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/"
		}
	]
}